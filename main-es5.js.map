{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/opentok.service.ts","webpack:///src/app/publisher/publisher.component.ts","webpack:///src/app/publisher/publisher.component.html","webpack:///src/app/subscriber/subscriber.component.ts","webpack:///src/app/subscriber/subscriber.component.html","webpack:///src/config.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","ref","opentokService","title","streams","changeDetectorRef","initSession","session","on","event","push","stream","detectChanges","idx","indexOf","splice","connect","err","console","error","alert","selector","templateUrl","styleUrls","providers","AppModule","declarations","imports","bootstrap","OpentokService","API_KEY","TOKEN","SESSION_ID","getOT","token","fetch","SAMPLE_SERVER_BASE_URL","data","json","log","apiKey","sessionId","reject","publish","PublisherComponent","publishing","OT","publisher","initPublisher","publisherDiv","nativeElement","insertMode","message","SubscriberComponent","subscriber","subscribe","subscriberDiv","environment","production","bootstrapModule"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACKE;;;;;;;;AAA6E,sFAAiB,SAAjB,EAAiB,cAAjB;;;;;;AAJ/E;;AACE;;AAGA;;AACF;;;;;;AAJ+C;;AAAA;;AAGC;;AAAA;;;;QDKnCC,Y;AAMX,4BAAoBC,GAApB,EAAoDC,cAApD,EAAoF;AAAA;;AAAhE,aAAAD,GAAA,GAAAA,GAAA;AAAgC,aAAAC,cAAA,GAAAA,cAAA;AALpD,aAAAC,KAAA,GAAQ,0BAAR;AAEA,aAAAC,OAAA,GAA4B,EAA5B;AAIE,aAAKC,iBAAL,GAAyBJ,GAAzB;AACD;;;;mCAEO;AAAA;;AACN,eAAKC,cAAL,CAAoBI,WAApB,GAAkCd,IAAlC,CAAuC,UAACe,OAAD,EAAyB;AAC9D,iBAAI,CAACA,OAAL,GAAeA,OAAf;;AACA,iBAAI,CAACA,OAAL,CAAaC,EAAb,CAAgB,eAAhB,EAAiC,UAACC,KAAD,EAAW;AAC1C,mBAAI,CAACL,OAAL,CAAaM,IAAb,CAAkBD,KAAK,CAACE,MAAxB;;AACA,mBAAI,CAACN,iBAAL,CAAuBO,aAAvB;AACD,aAHD;;AAIA,iBAAI,CAACL,OAAL,CAAaC,EAAb,CAAgB,iBAAhB,EAAmC,UAACC,KAAD,EAAW;AAC5C,kBAAMI,GAAG,GAAG,KAAI,CAACT,OAAL,CAAaU,OAAb,CAAqBL,KAAK,CAACE,MAA3B,CAAZ;;AACA,kBAAIE,GAAG,GAAG,CAAC,CAAX,EAAc;AACZ,qBAAI,CAACT,OAAL,CAAaW,MAAb,CAAoBF,GAApB,EAAyB,CAAzB;;AACA,qBAAI,CAACR,iBAAL,CAAuBO,aAAvB;AACD;AACF,aAND;AAOD,WAbD,EAcCpB,IAdD,CAcM;AAAA,mBAAM,KAAI,CAACU,cAAL,CAAoBc,OAApB,EAAN;AAAA,WAdN,WAeO,UAACC,GAAD,EAAS;AACdC,mBAAO,CAACC,KAAR,CAAcF,GAAd;AACAG,iBAAK,CAAC,6FAAD,CAAL;AACD,WAlBD;AAmBD;;;;;;;uBA9BUpB,Y,EAAY,gI,EAAA,gI;AAAA,K;;;YAAZA,Y;AAAY,+B;AAAA,kFAFZ,CAAE,+DAAF,CAEY,E;AAFM,c;AAAA,a;AAAA,gO;AAAA;AAAA;ACR/B;;AAAI;;AAAS;;AACb;;;;AADI;;AAAA;;AACC;;AAAA;;;;;;;;;sEDSQA,Y,EAAY;cANxB,uDAMwB;eANd;AACTqB,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD,CAHF;AAITC,mBAAS,EAAE,CAAE,+DAAF;AAJF,S;AAMc,Q;;;;;;;;;;;;;;;;;;;;;;;;AEVzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAqBaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAHT,CAAC,+DAAD,C;AAAgB,gBAHlB,CACP,uEADO,CAGkB;;;;0HAGhBA,S,EAAS;AAAA,uBAVlB,2DAUkB,EATlB,iFASkB,EARlB,oFAQkB;AARC,kBAGnB,uEAHmB;AAQD,O;AALL,K;;;;;sEAKJA,S,EAAS;cAZrB,sDAYqB;eAZZ;AACRC,sBAAY,EAAE,CACZ,2DADY,EAEZ,iFAFY,EAGZ,oFAHY,CADN;AAMRC,iBAAO,EAAE,CACP,uEADO,CAND;AASRH,mBAAS,EAAE,CAAC,+DAAD,CATH;AAURI,mBAAS,EAAE,CAAC,2DAAD;AAVH,S;AAYY,Q;;;;;;;;;;;;;;;;;;ACrBtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAMaC,c;AAKX,gCAAc;AAAA;AAAG;;;;gCAET;AACN,iBAAO,4CAAP;AACD;;;sCAEa;AAAA;;AACZ,cAAI,gDAAOC,OAAP,IAAkB,gDAAOC,KAAzB,IAAkC,gDAAOC,UAA7C,EAAyD;AACvD,iBAAKzB,OAAL,GAAe,KAAK0B,KAAL,GAAa3B,WAAb,CAAyB,gDAAOwB,OAAhC,EAAyC,gDAAOE,UAAhD,CAAf;AACA,iBAAKE,KAAL,GAAa,gDAAOH,KAApB;AACA,mBAAOzC,OAAO,CAACC,OAAR,CAAgB,KAAKgB,OAArB,CAAP;AACD,WAJD,MAIO;AACL,mBAAO4B,KAAK,CAAC,gDAAOC,sBAAP,GAAgC,UAAjC,CAAL,CACJ5C,IADI,CACC,UAAC6C,IAAD;AAAA,qBAAUA,IAAI,CAACC,IAAL,EAAV;AAAA,aADD,EAEJ9C,IAFI,CAEC,UAAC8C,IAAD,EAAU;AACdpB,qBAAO,CAACqB,GAAR,CAAY,MAAZ,EAAmBD,IAAnB;AAEA,oBAAI,CAAC/B,OAAL,GAAe,MAAI,CAAC0B,KAAL,GAAa3B,WAAb,CAAyBgC,IAAI,CAACE,MAA9B,EAAsCF,IAAI,CAACG,SAA3C,CAAf;AACA,oBAAI,CAACP,KAAL,GAAaI,IAAI,CAACJ,KAAlB;AACA,qBAAO,MAAI,CAAC3B,OAAZ;AACD,aARI,CAAP;AASD;AACF;;;kCAES;AAAA;;AACR,iBAAO,IAAIjB,OAAJ,CAAY,UAACC,OAAD,EAAUmD,MAAV,EAAqB;AACtC,kBAAI,CAACnC,OAAL,CAAaS,OAAb,CAAqB,MAAI,CAACkB,KAA1B,EAAiC,UAACjB,GAAD,EAAS;AACxC,kBAAIA,GAAJ,EAAS;AACPyB,sBAAM,CAACzB,GAAD,CAAN;AACD,eAFD,MAEO;AACL1B,uBAAO,CAAC,MAAI,CAACgB,OAAN,CAAP;AACD;AACF,aAND;AAOD,WARM,CAAP;AASD;;;;;;;uBAvCUsB,c;AAAc,K;;;aAAdA,c;AAAc,eAAdA,cAAc;;;;;sEAAdA,c,EAAc;cAD1B;AAC0B,Q;;;;;;;;;;;;;;;;;;;;ACN3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;AAGA,QAAMc,OAAO,GAAG,SAAVA,OAAU,GAAM,CAErB,CAFD;;QAUaC,kB;AAMX,kCAAoB1C,cAApB,EAAoD;AAAA;;AAAhC,aAAAA,cAAA,GAAAA,cAAA;AAClB,aAAK2C,UAAL,GAAkB,KAAlB;AACD;;;;0CAEiB;AAAA;;AAChB,cAAMC,EAAE,GAAG,KAAK5C,cAAL,CAAoB+B,KAApB,EAAX;AACA,eAAKc,SAAL,GAAiBD,EAAE,CAACE,aAAH,CAAiB,KAAKC,YAAL,CAAkBC,aAAnC,EAAkD;AAACC,sBAAU,EAAE;AAAb,WAAlD,CAAjB;;AAEA,cAAI,KAAK5C,OAAT,EAAkB;AAChB,gBAAI,KAAKA,OAAL,CAAa,aAAb,GAAJ,EAAmC;AACjC,mBAAKoC,OAAL;AACD;;AACD,iBAAKpC,OAAL,CAAaC,EAAb,CAAgB,kBAAhB,EAAoC;AAAA,qBAAM,MAAI,CAACmC,OAAL,EAAN;AAAA,aAApC;AACD;AACF;;;kCAES;AAAA;;AACR,eAAKpC,OAAL,CAAaoC,OAAb,CAAqB,KAAKI,SAA1B,EAAqC,UAAC9B,GAAD,EAAS;AAC5C,gBAAIA,GAAJ,EAAS;AACPG,mBAAK,CAACH,GAAG,CAACmC,OAAL,CAAL;AACD,aAFD,MAEO;AACL,oBAAI,CAACP,UAAL,GAAkB,IAAlB;AACD;AACF,WAND;AAOD;;;;;;;uBA9BUD,kB,EAAkB,gI;AAAA,K;;;YAAlBA,kB;AAAkB,oC;AAAA;AAAA;;;;;;;;;;;;;;;;;;ACb/B;;;;AAAO;;;;;;;;;sEDaMA,kB,EAAkB;cAN9B,uDAM8B;eANpB;AACTvB,kBAAQ,EAAE,eADD;AAETC,qBAAW,EAAE,4BAFJ;AAGTC,mBAAS,EAAE,CAAC,2BAAD;AAHF,S;AAMoB,Q;;;;;;gBAC5B,uD;iBAAU,c;;;gBACV;;;;;;;;;;;;;;;;;;;;AEfH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;QASa8B,mB;AAKX,qCAAc;AAAA;AAAG;;;;0CAEC;AAChB,cAAMC,UAAU,GAAG,KAAK/C,OAAL,CAAagD,SAAb,CAAuB,KAAK5C,MAA5B,EAAoC,KAAK6C,aAAL,CAAmBN,aAAvD,EAAsE,EAAtE,EAA0E,UAACjC,GAAD,EAAS;AACpG,gBAAIA,GAAJ,EAAS;AACPG,mBAAK,CAACH,GAAG,CAACmC,OAAL,CAAL;AACD;AACF,WAJkB,CAAnB;AAKD;;;;;;;uBAbUC,mB;AAAmB,K;;;YAAnBA,mB;AAAmB,qC;AAAA;AAAA;;;;;;;;;;;;;;;;;;;ACThC;;;;;;;;sEDSaA,mB,EAAmB;cAN/B,uDAM+B;eANrB;AACThC,kBAAQ,EAAE,gBADD;AAETC,qBAAW,EAAE,6BAFJ;AAGTC,mBAAS,EAAE,CAAC,4BAAD;AAHF,S;AAMqB,Q;;;;gBAC7B,uD;iBAAU,e;;;gBACV;;;gBACA;;;;;;;;;;;;;;;;;;;;AEZH;AAAe;;;AAAA;AACb;AACA;AACAa,4BAAsB,EAAE,0CAHX;AAIb;AACA;AACA;AACAN,aAAO,EAAE,EAPI;AAQbE,gBAAU,EAAE,EARC;AASbD,WAAK,EAAE,EATM,CAUb;AACA;AACA;;AAZa;;;;;;;;;;;;;;;;ACAf;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAM0B,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAA1C,GAAG;AAAA,aAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { OpentokService } from './opentok.service';\nimport * as OT from '@opentok/client';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  providers: [ OpentokService ]\n})\nexport class AppComponent implements OnInit {\n  title = 'Angular Basic Video Chat';\n  session: OT.Session;\n  streams: Array<OT.Stream> = [];\n  changeDetectorRef: ChangeDetectorRef;\n\n  constructor(private ref: ChangeDetectorRef, private opentokService: OpentokService) {\n    this.changeDetectorRef = ref;\n  }\n\n  ngOnInit () {\n    this.opentokService.initSession().then((session: OT.Session) => {\n      this.session = session;\n      this.session.on('streamCreated', (event) => {\n        this.streams.push(event.stream);\n        this.changeDetectorRef.detectChanges();\n      });\n      this.session.on('streamDestroyed', (event) => {\n        const idx = this.streams.indexOf(event.stream);\n        if (idx > -1) {\n          this.streams.splice(idx, 1);\n          this.changeDetectorRef.detectChanges();\n        }\n      });\n    })\n    .then(() => this.opentokService.connect())\n    .catch((err) => {\n      console.error(err);\n      alert('Unable to connect. Make sure you have updated the config.ts file with your OpenTok details.');\n    });\n  }\n}\n","<h1>{{title}}</h1>\n<div *ngIf=\"session\">\n  <app-publisher style=\"width:600;height:600;\" [session]=\"session\"></app-publisher>\n\n\n  <app-subscriber style=\"width:600;height:600;\" *ngFor=\"let stream of streams\" [stream]=\"stream\" [session]=\"session\"></app-subscriber>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\n\nimport { AppComponent } from './app.component';\nimport { PublisherComponent } from './publisher/publisher.component';\nimport { SubscriberComponent } from './subscriber/subscriber.component';\nimport { OpentokService } from './opentok.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PublisherComponent,\n    SubscriberComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [OpentokService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\n\nimport * as OT from '@opentok/client';\nimport config from '../config';\n\n@Injectable()\nexport class OpentokService {\n\n  session: OT.Session;\n  token: string;\n\n  constructor() { }\n\n  getOT() {\n    return OT;\n  }\n\n  initSession() {\n    if (config.API_KEY && config.TOKEN && config.SESSION_ID) {\n      this.session = this.getOT().initSession(config.API_KEY, config.SESSION_ID);\n      this.token = config.TOKEN;\n      return Promise.resolve(this.session);\n    } else {\n      return fetch(config.SAMPLE_SERVER_BASE_URL + '/session')\n        .then((data) => data.json())\n        .then((json) => {\n          console.log(\"json\",json);\n          \n          this.session = this.getOT().initSession(json.apiKey, json.sessionId);\n          this.token = json.token;\n          return this.session;\n        });\n    }\n  }\n\n  connect() {\n    return new Promise((resolve, reject) => {\n      this.session.connect(this.token, (err) => {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(this.session);\n        }\n      });\n    });\n  }\n}\n","import { Component, ElementRef, AfterViewInit, ViewChild, Input } from '@angular/core';\nimport { OpentokService } from '../opentok.service';\n\nconst publish = () => {\n\n};\n\n@Component({\n  selector: 'app-publisher',\n  templateUrl: './publisher.component.html',\n  styleUrls: ['./publisher.component.css']\n})\n\nexport class PublisherComponent implements AfterViewInit {\n  @ViewChild('publisherDiv') publisherDiv: ElementRef;\n  @Input() session: OT.Session;\n  publisher: OT.Publisher;\n  publishing: Boolean;\n\n  constructor(private opentokService: OpentokService) {\n    this.publishing = false;\n  }\n\n  ngAfterViewInit() {\n    const OT = this.opentokService.getOT();\n    this.publisher = OT.initPublisher(this.publisherDiv.nativeElement, {insertMode: 'append'});\n\n    if (this.session) {\n      if (this.session['isConnected']()) {\n        this.publish();\n      }\n      this.session.on('sessionConnected', () => this.publish());\n    }\n  }\n\n  publish() {\n    this.session.publish(this.publisher, (err) => {\n      if (err) {\n        alert(err.message);\n      } else {\n        this.publishing = true;\n      }\n    });\n  }\n\n}\n","<div   [ngClass]=\"{'publishing': publishing}\" #publisherDiv></div>\n","import { Component, ElementRef, AfterViewInit, ViewChild, Input } from '@angular/core';\nimport * as OT from '@opentok/client';\n\n@Component({\n  selector: 'app-subscriber',\n  templateUrl: './subscriber.component.html',\n  styleUrls: ['./subscriber.component.css']\n})\n\nexport class SubscriberComponent implements AfterViewInit {\n  @ViewChild('subscriberDiv') subscriberDiv: ElementRef;\n  @Input() session: OT.Session;\n  @Input() stream: OT.Stream;\n\n  constructor() { }\n\n  ngAfterViewInit() {\n    const subscriber = this.session.subscribe(this.stream, this.subscriberDiv.nativeElement, {}, (err) => {\n      if (err) {\n        alert(err.message);\n      }\n    });\n  }\n}\n","<div #subscriberDiv></div>\n","export default {\n  // Set this to the base URL of your sample server, such as 'https://your-app-name.herokuapp.com'.\n  // Do not include the trailing slash. See the README for more information:\n  SAMPLE_SERVER_BASE_URL: 'https://angular-video-call.herokuapp.com',\n  // OR, if you have not set up a web server that runs the learning-opentok-php code,\n  // set these values to OpenTok API key, a valid session ID, and a token for the session.\n  // For test purposes, you can obtain these from https://tokbox.com/account.\n  API_KEY: '',\n  SESSION_ID: '',\n  TOKEN: ''\n  // API_KEY: '45828062',\n  // SESSION_ID: '1_MX40NTgyODA2Mn5-MTYwMTE0MzY4ODQ4M35nUS9WcTZQY1ZtLzlRVG51eVFCOGRYT0h-UH4',\n  // TOKEN: 'T1==cGFydG5lcl9pZD00NTgyODA2MiZzaWc9ZDc3MDY2OWRhOTRhNDRlODNjZmZhZmNhOTA2MGVjYzE1MWI2Y2YxNjpzZXNzaW9uX2lkPTFfTVg0ME5UZ3lPREEyTW41LU1UWXdNVEUwTXpZNE9EUTRNMzVuVVM5V2NUWlFZMVp0THpsUlZHNTFlVkZDT0dSWVQwaC1VSDQmY3JlYXRlX3RpbWU9MTYwMTE0NDU2MiZub25jZT0wLjUxNjMyNTkxNzAzMDQ0NDQmcm9sZT1wdWJsaXNoZXImZXhwaXJlX3RpbWU9MTYwMTIzMDk2Mg=='\n};\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}